name: Tests E2E
# Test: 1
on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, labeled, reopened]

jobs:
  run-ci:
    name: Run Tests E2E
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: postgres://docker:docker@localhost:5432/upload_test
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      CLOUDFLARE_ACCESS_KEY_ID: ${{ secrets.CLOUDFLARE_ACCESS_KEY_ID }}
      CLOUDFLARE_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_SECRET_ACCESS_KEY }}
      CLOUDFLARE_BUCKET_NAME: ${{ secrets.CLOUDFLARE_BUCKET_NAME }}
      CLOUDFLARE_PUBLIC_URL: ${{ secrets.CLOUDFLARE_PUBLIC_URL }}
      CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: docker
          POSTGRES_PASSWORD: docker
          POSTGRES_DB: upload_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4 #baixa o codigo do repositorio

      - uses: pnpm/action-setup@v4 # setup pnpm
        name: Install pnpm
        with:
          version: 10.11.0
          run_install: false # nao fazer o install automatico

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - run: pnpm install --frozen-lockfile #frozen-lockfile para garantir que as dependencias nao serao alteradas

      - run: pnpm run test
